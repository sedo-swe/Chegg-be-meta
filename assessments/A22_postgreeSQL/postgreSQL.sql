CREATE TABLE artists (
  artist_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  artist_name VARCHAR(255),
  genre_name VARCHAR(100)
);

CREATE TABLE songs (
  song_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  song_name VARCHAR(100) DEFAULT 'no song title',
  album_name VARCHAR(100) DEFAULT 'no album title',
  artist INTEGER REFERENCES artists(artist_id) NOT NULL
);

CREATE TABLE concerts (
  concert_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  concert_name VARCHAR(255),
  concert_date DATE
);

-- join table
CREATE TABLE artists_concerts (
  artist_id INTEGER REFERENCES artists(artist_id),
  concert_id INTEGER REFERENCES concerts(concert_id),
  scheduled_start_at TIME,
  scheduled_end_at TIME,
  PRIMARY KEY (artist_id, concert_id)
);



SELECT * FROM artists a inner join songs s ON a.artist_id = s.artist;

SELECT a.artist_id, a.artist_name, s.song_name 
FROM artists a inner join songs s ON a.artist_id = s.artist;

SELECT a.artist_name, s.song_name, s.album_name  
FROM artists a inner join songs s ON a.artist_id = s.artist
where s.song_name like 'The%';

select a.artist_name, c.concert_name, c.concert_date, ac.scheduled_start_at, ac.scheduled_end_at 
from artists_concerts ac 
inner join artists a 
on ac.artist_id = a.artist_id 
inner join concerts c 
on ac.concert_id = c.concert_id;